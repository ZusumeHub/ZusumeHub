local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local TeleportGUILibrary = {}

-- Constants for UI
local FONT = Enum.Font.GothamBold
local CORNER_RADIUS = UDim.new(0, 6)
local COLORS = {
    Frame = Color3.fromRGB(35, 35, 40),
    Text = Color3.fromRGB(255, 255, 255),
    Accent = Color3.fromRGB(114, 137, 218),
    Success = Color3.fromRGB(87, 242, 135),
    Error = Color3.fromRGB(255, 89, 89),
    Warning = Color3.fromRGB(255, 201, 79),
    Input = Color3.fromRGB(55, 55, 60),
}

-- Icon Loading
local FeatherIcons = {}

local function LoadFeatherIcons()
    local existingModule = ReplicatedStorage:FindFirstChild("FeatherIcons")
    if existingModule and existingModule:IsA("ModuleScript") then
        return require(existingModule)
    else
        local featherModule = Instance.new("ModuleScript")
        featherModule.Name = "FeatherIcons"
        featherModule.Parent = ReplicatedStorage
        local success, result = pcall(function()
            local url = "https://raw.githubusercontent.com/7kayoh/feather-roblox/main/src/Modules/asset.lua"
            return HttpService:GetAsync(url)
        end)
        if success then
            local moduleCode = result:gsub("^%s*return%s*", "local FeatherModule = ") .. "\n\nreturn FeatherModule"
            featherModule.Source = moduleCode
            return require(featherModule)
        else
            warn("Failed to load Feather icons from GitHub. Using fallback icons.")
            local fallbackSource = [[
                local FeatherModule = {
                    ["alert-circle"] = "rbxassetid://7072978559",
                    ["alert-octagon"] = "rbxassetid://7072978894",
                    ["alert-triangle"] = "rbxassetid://7072980286",
                    ["align-center"] = "rbxassetid://7072980488",
                    ["align-justify"] = "rbxassetid://7072980642",
                    ["align-left"] = "rbxassetid://7072980796",
                    ["align-right"] = "rbxassetid://7072980973"
                }
                return FeatherModule
            ]]
            featherModule.Source = fallbackSource
            return require(featherModule)
        end
    end
end

local function InitializeFeatherIcons()
    local success, result = pcall(LoadFeatherIcons)
    if success then
        FeatherIcons = result
        print("Successfully loaded Feather icons module")
    else
        warn("Failed to load Feather icons: " .. tostring(result))
        FeatherIcons = {
            ["alert-circle"] = "rbxassetid://7072978559",
            ["alert-octagon"] = "rbxassetid://7072978894",
            ["alert-triangle"] = "rbxassetid://7072980286",
            ["align-center"] = "rbxassetid://7072980488",
            ["align-justify"] = "rbxassetid://7072980642",
            ["align-left"] = "rbxassetid://7072980796",
            ["align-right"] = "rbxassetid://7072980973"
        }
    end
end

InitializeFeatherIcons()

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "TeleportGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = PlayerGui

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 350, 0, 300)
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

-- Round the corners
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

-- Top Bar
local TopBar = Instance.new("Frame")
TopBar.Name = "TopBar"
TopBar.Size = UDim2.new(1, 0, 0, 30)
TopBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TopBar.BorderSizePixel = 0
TopBar.Parent = MainFrame

-- Title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, 0, 1, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 16
Title.Font = Enum.Font.GothamBold
Title.Text = "This is growwww"
Title.TextXAlignment = Enum.TextXAlignment.Center
Title.Parent = TopBar

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -28, 0, 2)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(55, 55, 60)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Text = "-"
MinimizeButton.TextSize = 16
MinimizeButton.Parent = TopBar
MinimizeButton.ZIndex = 2

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 5)
MinimizeCorner.Parent = MinimizeButton

-- Tab Container
local TabContainer = Instance.new("Frame")
TabContainer.Name = "TabContainer"
TabContainer.Size = UDim2.new(0, 100, 1, -30)
TabContainer.Position = UDim2.new(0, 0, 0, 30)
TabContainer.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TabContainer.BorderSizePixel = 0
TabContainer.Parent = MainFrame

local TabListLayout = Instance.new("UIListLayout")
TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabListLayout.Padding = UDim.new(0, 5)
TabListLayout.Parent = TabContainer

-- ScrollingFrame
local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Name = "ScrollingFrame"
ScrollingFrame.Size = UDim2.new(1, -100, 1, -60)
ScrollingFrame.Position = UDim2.new(0, 100, 0, 30)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.ScrollBarThickness = 6
ScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
ScrollingFrame.HorizontalScrollBarInset = Enum.ScrollBarInset.None
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.Parent = MainFrame

-- YouTube Label
local YouTubeLabel = Instance.new("TextLabel")
YouTubeLabel.Name = "YouTubeLabel"
YouTubeLabel.Size = UDim2.new(1, 0, 0, 30)
YouTubeLabel.Position = UDim2.new(0, 0, 1, -30)
YouTubeLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
YouTubeLabel.BorderSizePixel = 0
YouTubeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
YouTubeLabel.TextSize = 16
YouTubeLabel.Font = Enum.Font.GothamBold
YouTubeLabel.Text = "Youtube: Zysume"
YouTubeLabel.TextXAlignment = Enum.TextXAlignment.Left
YouTubeLabel.Parent = MainFrame
YouTubeLabel.ZIndex = 2
YouTubeLabel.Visible = true

local UIPadding = Instance.new("UIPadding")
UIPadding.PaddingLeft = UDim.new(0, 15)
UIPadding.Parent = YouTubeLabel

-- Tab Management
local tabContents = {}
local tabPositionY = {}
local tabContentHeights = {}
local activeTab = nil

local function createTabButton(tabName, iconName)
    local button = Instance.new("TextButton")
    button.Name = tabName .. "Tab"
    button.Size = UDim2.new(1, 0, 0, 30)
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    button.BorderSizePixel = 0
    button.Font = Enum.Font.G electricallyBold
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.Parent = TabContainer
    
    if iconName and FeatherIcons[iconName] then
        local icon = Instance.new("ImageLabel")
        icon.Name = "Icon"
        icon.Size = UDim2.new(0, 20, 0, 20)
        icon.Position = UDim2.new(0, 5, 0.5, -10)
        icon.BackgroundTransparency = 1
        icon.Image = FeatherIcons[iconName]
        icon.Parent = button
        
        local textLabel = Instance.new("TextLabel")
        textLabel.Name = "TabLabel"
        textLabel.Size = UDim2.new(1, -30, 1, 0)
        textLabel.Position = UDim2.new(0, 30, 0, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Font = Enum.Font.GothamBold
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        textLabel.TextSize = 14
        textLabel.Text = tabName
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.Parent = button
        
        button.Text = ""
    else
        button.Text = tabName
        button.TextXAlignment = Enum.TextXAlignment.Center
    end

    return button
end

local function setActiveTab(tabName)
    if activeTab == tabName then return end
    
    if activeTab then
        tabContents[activeTab].Visible = false
        local prevTabButton = TabContainer:FindFirstChild(activeTab .. "Tab")
        if prevTabButton then
            TweenService:Create(
                prevTabButton,
                TweenInfo.new(0.3),
                {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
            ):Play()
            local prevHighlight = prevTabButton:FindFirstChild("ActiveHighlight")
            if prevHighlight then
                TweenService:Create(
                    prevHighlight,
                    TweenInfo.new(0.3),
                    {BackgroundTransparency = 1}
                ):Play()
                game:GetService("Debris"):AddItem(prevHighlight, 0.3)
            end
        end
    end
    
    activeTab = tabName
    tabContents[tabName].Visible = true
    tabContents[tabName].Size = UDim2.new(1, 0, 0, tabContentHeights[tabName] or 0)
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, tabContentHeights[tabName] or 0)
    
    local tabButton = TabContainer:FindFirstChild(tabName .. "Tab")
    if tabButton then
        local highlight = Instance.new("Frame")
        highlight.Name = "ActiveHighlight"
        highlight.Size = UDim2.new(0.9, 0, 0.8, 0)
        highlight.Position = UDim2.new(0.05, 0, 0.1, 0)
        highlight.BackgroundColor3 = Color3.fromRGB(70, 200, 120)
        highlight.BackgroundTransparency = 0.2
        highlight.BorderSizePixel = 0
        highlight.ZIndex = tabButton.ZIndex - 1
        highlight.Parent = tabButton
        
        local highlightCorner = Instance.new("UICorner")
        highlightCorner.CornerRadius = UDim.new(0, 15)
        highlightCorner.Parent = highlight
        
        highlight.BackgroundTransparency = 1
        TweenService:Create(
            highlight,
            TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {BackgroundTransparency = 0.2}
        ):Play()
    end
end

function TeleportGUILibrary.MakeTab(config)
    local tabName = config.Name
    local iconName = config.Icon

    local tabContent = Instance.new("Frame")
    tabContent.Name = tabName .. "Content"
    tabContent.Size = UDim2.new(1, 0, 0, 0)
    tabContent.Position = UDim2.new(0, 0, 0, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.Parent = ScrollingFrame
    tabContent.Visible = false

    tabContents[tabName] = tabContent
    tabPositionY[tabName] = 10
    tabContentHeights[tabName] = 0

    local tabButton = createTabButton(tabName, iconName)
    tabButton.MouseButton1Click:Connect(function()
        setActiveTab(tabName)
    end)

    if not activeTab then
        setActiveTab(tabName)
    end

    local tab = {
        AddDropdown = function(name, labelText, options, defaultOption, position, callback)
            local pos = position or UDim2.new(0.05, 0, 0, tabPositionY[tabName])
            local dropdown = Instance.new("TextLabel") -- Placeholder; implement as needed
            dropdown.Name = name
            dropdown.Size = UDim2.new(0.9, 0, 0, 30)
            dropdown.Position = pos
            dropdown.BackgroundColor3 = COLORS.Input
            dropdown.TextColor3 = COLORS.Text
            dropdown.Text = labelText .. ": " .. (defaultOption or options[1])
            dropdown.Parent = tabContent
            tabPositionY[tabName] = tabPositionY[tabName] + 35
            tabContentHeights[tabName] = tabPositionY[tabName]
            if activeTab == tabName then
                tabContent.Size = UDim2.new(1, 0, 0, tabContentHeights[tabName])
                ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, tabContentHeights[tabName])
            end
            return dropdown, {}
        end,
        AddCheckbox = function(name, text, position, onToggle)
            local pos = position or UDim2.new(0.05, 0, 0, tabPositionY[tabName])
            local checkbox = Instance.new("TextButton") -- Placeholder; implement as needed
            checkbox.Name = name
            checkbox.Size = UDim2.new(0.9, 0, 0, 30)
            checkbox.Position = pos
            checkbox.BackgroundColor3 = COLORS.Input
            checkbox.TextColor3 = COLORS.Text
            checkbox.Text = text
            checkbox.Parent = tabContent
            tabPositionY[tabName] = tabPositionY[tabName] + 35
            tabContentHeights[tabName] = tabPositionY[tabName]
            if activeTab == tabName then
                tabContent.Size = UDim2.new(1, 0, 0, tabContentHeights[tabName])
                ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, tabContentHeights[tabName])
            end
            return checkbox, {}
        end,
        AddTextInput = function(name, labelText, defaultValue, position, onChange)
            local pos = position or UDim2.new(0.05, 0, 0, tabPositionY[tabName])
            local input = Instance.new("TextBox") -- Placeholder; implement as needed
            input.Name = name
            input.Size = UDim2.new(0.9, 0, 0, 30)
            input.Position = pos
            input.BackgroundColor3 = COLORS.Input
            input.TextColor3 = COLORS.Text
            input.Text = defaultValue or labelText
            input.Parent = tabContent
            tabPositionY[tabName] = tabPositionY[tabName] + 35
            tabContentHeights[tabName] = tabPositionY[tabName]
            if activeTab == tabName then
                tabContent.Size = UDim2.new(1, 0, 0, tabContentHeights[tabName])
                ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, tabContentHeights[tabName])
            end
            return input, {}
        end,
        AddButton = function(name, text, position, onClick, iconName)
            local pos = position or UDim2.new(0.05, 0, 0, tabPositionY[tabName])
            local button = Instance.new("TextButton")
            button.Name = name
            button.Size = UDim2.new(0.9, 0, 0, 30)
            button.Position = pos
            button.BackgroundColor3 = COLORS.Accent
            button.TextColor3 = COLORS.Text
            button.Text = text
            button.Font = FONT
            button.TextSize = 14
            button.Parent = tabContent
            button.MouseButton1Click:Connect(onClick or function() end)
            tabPositionY[tabName] = tabPositionY[tabName] + 35
            tabContentHeights[tabName] = tabPositionY[tabName]
            if activeTab == tabName then
                tabContent.Size = UDim2.new(1, 0, 0, tabContentHeights[tabName])
                ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, tabContentHeights[tabName])
            end
            return button, button
        end,
    }

    return tab
end

return TeleportGUILibrary